//6ta Actividad de recursion
//Ejercicio
//Implementar el algoritmo de busqueda binaria en C++.
//Utilice el arreglo{ 1, 3, 4, 5, 17, 18, 31, 33 }.
//Solicite al usuario un numero entero positivo.
//Busque dicho numero en el arreglo mediante una funcion recursiva
//que emplea la busqueda binaria.

//Busqueda binaria
//en un arreglo.
#include <iostream>
using namespace std;
void mostrarArreglo(const int[], int); //recibe el arreglo
int busquedaBinaria(const int[], int, int); //arreglo, tamano, clave
void ordenarArreglo(int[], int); //ordena el arreglo
void intercambiar(int&, int&); //intercambia valores
int main()
{
	int clave = 0;
	const int siz = 15;
	int dect[siz] = { 1, 3, 4, 5, 17, 18, 31, 33 };
	//Ordenar el arreglo para la busqueda binaria
	ordenarArreglo(dect, siz);
	cout << "Elementos del arreglo: " << endl;
	mostrarArreglo(dect, siz);
	cout << "Indique un valor a buscar y se le devolvera el indice: " << endl;
	cin >> clave;
	cout << "Su valor se encuentra en arreglo[" << busquedaBinaria(dect, siz, clave) << "]" << endl;
	
	return 0;
}
void mostrarArreglo(const int dect[], int siz)
{
	for (int i = 0; i < siz; i++)
		cout << "arreglo[" << i << "]=" << dect[i] << endl;
}
int busquedaBinaria(const int dect[], int siz, int key)
{
	int high = siz - 1;
	int low = 0;
	int mid;
	while (low <= high)
	{
		mid = (high + low) / 2;
		if (dect[mid] == key)
			return mid;
		else
			if (key < dect[mid])
				high = mid - 1;
			else
				low = mid + 1;
	}
	return -1;
}
void ordenarArreglo(int dect[], int siz)
{
	for (int i = 0; i < siz - 1; i++)
		for (int j = 0; j < siz - 1; j++)
			if (dect[j] > dect[j + 1])
				intercambiar(dect[j], dect[j + 1]);
}
void intercambiar(int& a, int& b)
{
	int tmp = b;
	b = a;
	a = tmp;
}
